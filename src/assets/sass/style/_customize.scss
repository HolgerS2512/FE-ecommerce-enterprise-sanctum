
$xfs-fh: 46px;
$xfs-pt: 10px;
$xfs-cp: 4px;
$xfs-clr: rgb(114, 114, 114);
$xfs-itb-padd: 12.5px;
$xfs-ilr-padd: 10px;

$xfs-back-clr: rgb(190, 190, 190);
$xfs-back-clr-hover: darken($xfs-clr, 25%);
$xfs-back-clr-focus: rgb(145, 41, 241);

$xfs-background: white;

$xfs-fs-label: .8rem;

$xfs-invalid: var(--bs-form-invalid-color);

$app-input-font: 'Roboto', Helvetica, Arial, sans-serif !important;

.xfs-v1-control, .xfs-v1-control-no-val {
  min-height: 80px;
  max-width: 520px;

  margin: 8px 0;
  background-color: $xfs-background;

  @include pointerEv;
  @include userSelect;

  // Code field
  .xfs-v1-throttle {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: .5rem;

    p {
      height: max-content;
    }
  }

  // wrapper
  .xfs-v1-wrapper {
    position: relative;
    width: 100%;
    border-radius: $app-radius;
    @include pointerEv(inherit);
    @include userSelect(inherit);
    padding: $xfs-cp;
    font-family: $app-input-font;

    // label
    .xfs-v1-label {
      position: absolute;
      @include pointerEv(inherit);
      @include userSelect(inherit);
      line-height: 1;
      color: $xfs-clr;
      font-family: inherit;
      z-index: 5;

      @include transition(.15s);

      font-size: $xfs-fs-label;
      top: calc($xfs-cp * 2 * -1);
      left: calc(6px + $xfs-cp);
      @media (min-width:768px) {
        left: calc(10px + $xfs-cp);
      }

      &::before {
        $diff: 4px;
        content: '';
        z-index: -1;
        background-color: $xfs-background;
        width: calc(100% + $diff * 2);
        height: calc($xfs-fs-label / 8 * 10);
        position: absolute;
        top: calc($diff / 4 * -1);
        left: calc($diff * -1);
      }
      &:not(.noRequire)::after {
        content: '*';
        margin-left: 1px;
      }
    } // label in input
    .xfs-v1-label.active {
      font-size: 1rem;
      top: $xfs-cp + $xfs-itb-padd + 4px;
      left: $xfs-cp + $xfs-ilr-padd - 4px;
      @media (min-width:768px) {
        left: $xfs-cp + $xfs-ilr-padd + 4px;
      }
    }

    //input field
    .xfs-v1-input {
      width: inherit;
      border: none;
      outline: none;
      @include pointerEv(all);
      @include userSelect(all);
      border-radius: inherit;
      line-height: 1;
      padding: 12.5px 6px;
      font-size: 1rem;
      color: black;
      font-family: inherit;
      min-height: $xfs-fh;
      @media (min-width:768px) {
        padding: 12.5px 10px;
      }
    }

    // PASSWORD FIELD
    $eye-btn: 46px;
    $eye-mb: 2px;
    $pulse-size: 40px;

    input[name="password"] {
      padding-right: $eye-btn - $xfs-cp !important;
    }
    button.btn-nostyle {
      height: 100%;
      width: $eye-btn;
      padding: 0;
      position: absolute;
      right: 0;
      top: 0;
      z-index: 4;
    
      svg {
        margin-bottom: $eye-mb;
      }

      &::before {
        content: '';
        width: 0;
        height: 0;
        position: absolute;
        top: calc($pulse-size / 2 + 8px);
        right: calc($pulse-size / 2 + 8px);
        z-index: -1;
        border-radius: 100%;
        @include transition(.2s);
      }
      &:hover::before, &:focus::before {
        width: $pulse-size;
        height: $pulse-size;
        top: calc(($eye-btn - $pulse-size) / 2 + $eye-mb);
        right: calc(($eye-btn - $pulse-size) / 2);
      }
      &:hover::before {
        background-color: rgba(0, 0, 0, 0.05);
      }
      &:focus::before {
        background-color: rgba(38, 0, 255, 0.15);
      }
    }
    .xfs-svg-rotate {
      &:hover::before, &:focus::before {
        top: calc((($eye-btn - $pulse-size) / 2) + 4px) !important;
      }
    }
    button.btn-nostyle.pulse::after {
      $pulsar-size: calc($pulse-size / 1.25);
      content: '';
      width: $pulsar-size;
      height: $pulsar-size;
      position: absolute;
      top: calc(($eye-btn - $pulsar-size) / 2 + $eye-mb);
      right: calc(($eye-btn - $pulsar-size) / 2);
      background-color: rgba(0, 0, 0, 0.04);
      z-index: -1;
      border-radius: 100%;
      -webkit-animation: pulse-animation .5s;
      -moz-animation: pulse-animation .5s;
      -o-animation: pulse-animation .5s;
      animation: pulse-animation .5s;
    }
  }
  // wrapper hover clr
  .xfs-v1-wrapper {
    border: 1px solid $xfs-back-clr;

    &:hover {
      border: 1px solid $xfs-back-clr-hover;
    }
  }
  // wrapper focus clr
  .xfs-v1-wrapper.focus {
    border: 1px solid $xfs-back-clr-focus;

    &:hover {
      border: 1px solid darken($xfs-back-clr-focus, 15%);
    }

    .xfs-v1-label {
      color: $xfs-back-clr-focus;
    }
  }
  // wrapper error clr
  .xfs-v1-wrapper.error {
    border: 1px solid $xfs-invalid;

    &:hover {
      border: 1px solid rgb(165, 26, 26);
    }

    .xfs-v1-label {
      color: $xfs-invalid;
    }
  } 
  // readOnly
  .xfs-v1-wrapper.readonly {
    @include opacity(.5);
    &:hover {
      border: 1px solid lighten($xfs-back-clr-hover, 50%);
    }
  }
  .xfs-v1-wrapper.readonly.focus {
    border: 1px solid $xfs-back-clr;;

    &:hover {
      border: 1px solid lighten($xfs-back-clr-hover, 50%);
    }

    .xfs-v1-label {
      color: $xfs-clr;
    }
  }
  // WRAPPER END

  // Invalid feedback
  .xfs-v1-i-fb {
    min-height: 18px;
    width: 100%;
    @include pointerEv(all);
    @include userSelect(all);
    font-size: .75rem;
    font-weight: 600;
    font-family: 'Roboto', Helvetica, Arial, sans-serif !important;
    letter-spacing: 0.03333em;
    color: $xfs-invalid;
    margin: 6px calc($xfs-cp * 2 + 2px) 0 calc($xfs-cp * 2 + 2px);
  }
}

@media (min-width:767.998px) {
  .xfs-v1t-control {
    max-width: 100%;
  }
}

.xfs-svg-clr {
  padding: 2px;

  &:focus {

    svg {
      fill: rgb(145, 41, 241);
    }
  }
  
  svg {
    fill: #100f44;
    @include transition;
    @include pointerEv;
    @include userSelect;
    
    &:hover {
      fill: rgb(145, 41, 241);
      @include transfScale;
    }
    
    path {
      @include pointerEv;
      @include userSelect;
    }
  }
}

.xfs-svg-clr.move {
  -webkit-animation: rotate-animate 1s linear infinite;
  -moz-animation: rotate-animate 1s linear infinite;
  -o-animation: rotate-animate 1s linear infinite;
  animation: rotate-animate 1s linear infinite;
}

.xfs-svg-clr:disabled {
  &:hover svg {
    @include transfScale(1);
    fill: #100f44;
  }
}

.xfs-svg-rotate {
  padding: 2px;
  cursor: pointer;

  svg {
    margin: 2px;
    fill: #100f44;
    @include transition;
    @include pointerEv;
    @include userSelect;
    
    path {
      @include pointerEv;
      @include userSelect;
    }
  }
}

.xfs-svg-rotate.move {
  -webkit-animation: rotate-animate 1s linear infinite;
  -moz-animation: rotate-animate 1s linear infinite;
  -o-animation: rotate-animate 1s linear infinite;
  animation: rotate-animate 1s linear infinite;
}

.xfs-svg-rotate:disabled {
  &:hover svg {
    @include transfScale(1);
    fill: #100f44;
  }
}

// Select field
.xfs-s1-control {
  min-height: 80px;
  max-width: 520px;
  margin: 8px 0;
  background-color: white;
  position: relative;

  .xfs-s1-wrapper {
    border: 1px solid $xfs-back-clr;
    border-radius: $app-radius;
    padding: 0 4px;
    font-family: $app-input-font;
    &:hover {
      border: 1px solid $xfs-back-clr-hover;
    }
  }
  .xfs-s1-wrapper.focus {
    border: 1px solid $xfs-back-clr-focus;
    &:hover {
      border: 1px solid darken($xfs-back-clr-focus, 15%);
    }
    .xfs-s1-label {
      color: $xfs-back-clr-focus;
    }
  }
  .xfs-s1-wrapper.error {
    border: 1px solid $xfs-invalid;
    &:hover {
      border: 1px solid rgb(165, 26, 26);
    }
    .xfs-s1-label {
      color: $xfs-invalid;
    }
  } 

  .xfs-s1-label {
    position: absolute;
    @include pointerEv(inherit);
    @include userSelect(inherit);
    line-height: 1;
    color: $xfs-clr;
    font-family: inherit;
    z-index: 5;

    @include transition(.15s);

    font-size: $xfs-fs-label;
    top: calc($xfs-cp * 2 * -1);
    left: calc(6px + $xfs-cp);
    @media (min-width:768px) {
      left: calc(10px + $xfs-cp);
    }

    &::before {
      $diff: 4px;
      content: '';
      z-index: -1;
      background-color: $xfs-background;
      width: calc(100% + $diff * 2);
      height: calc($xfs-fs-label / 8 * 10);
      position: absolute;
      top: calc($diff / 4 * -1);
      left: calc($diff * -1);
    }
  }
  .xfs-s1-label:not(.noRequire)::after {
    content: '*';
    margin-left: 1px;
    font-family: inherit;
    font-size: .8rem;
  }
  .xfs-s1-label.active {
    font-size: 1rem;
    top: $xfs-cp + $xfs-itb-padd + 4px;
    left: $xfs-cp + $xfs-ilr-padd - 4px;
    @media (min-width:768px) {
      left: $xfs-cp + $xfs-ilr-padd + 4px;
    }
    &::after {
      font-size: 1rem;
    }
  }
}


// Select birth row 
.b-small {
  margin: 6px 0 0 2px;
  font-size: .95rem;
  &::after {
    content: '*';
    font-family: $app-input-font;
  }
}
.birth {
  width: 100%;
  max-width: 460px;

  display: flex;
  justify-content: space-between;
  align-items: stretch;
  gap: 8px;
  margin-top: 10px;

  .b-day {
    /* Three values: flex-grow | flex-shrink | flex-basis */
    flex: 1 0 15%;
  }
  .b-month {
    flex: 2 0 20%;
  }
  .b-year {
    flex: 1 0 20%;
  }
}


.mt-225r {
  margin-top: 2.25rem;
}

.btn-sm-link {
  font-size: .875em;
  font-weight: 600;
  text-decoration: underline;
  text-decoration-thickness: 2px;
  text-underline-offset: 3px;

  height: max-content;
  padding: 2px;

  @include transition(.05s);

  &:hover, &:focus, &:focus-within {
    color: #8c8fa0;
  }
  &:focus, &:focus-within {
    box-shadow: 0 0 0 2px rgb(17, 91, 252);
  }
}

.regular-list {
  list-style-type: disc;
  text-indent: 0;
  margin-top: 4px;

  li {
    line-height: 1.2;
    padding-left: 12px;
    margin-bottom: 2px;
    color: #5f5f5f;

    &::marker {
      font-size: 1.4rem;
      color: black;
    }
  }
}

li, .p {
  .inside-link {
    color: black;

    &:hover, &:focus {
      color: #5f5f5f;
    }
  }
}


.select-similar-container {
  /*the container must be positioned relative:*/
  .similar-select {
    position: relative;
    font-weight: 600;
    width: min-content;
    white-space: nowrap;
  
    .select-display {
      // background-color: white;
      padding: 6px 10px;
      // border: 1px solid $xfs-back-clr;
      border-radius: 0.5rem;
      cursor: pointer;
      position: relative;
      display: flex;

      .similar-arrow {
        position: relative;
        top: -2px;
      }
      .arrow-up {
        top: 1px;
      }
      .arrow-up, .similar-arrow {
        @include pointerEv;
        @include userSelect;
      }
    }

    .select-items {
      position: absolute;
      top: 42px;
      width: min-content;
      background-color: white;
      border: 1px solid $xfs-back-clr;
      z-index: 100;
      max-height: 300px;
      overflow-y: auto;
      padding: 4px 0;
      border-radius: 4px;
      box-shadow: -6px 6px 14px 4px rgba(0, 0, 0, 0.2);
      text-align: left;
    }
    
    .similar-option {
      padding: 4px 1rem;
      white-space: nowrap;
      cursor: pointer;
    }
    
    .similar-option:hover {
      background-color: #d3d4d5;
    }

    .same-as-selected {
      background-color: black;
      color: white;

      &:hover {
        background-color: $xfs-back-clr-hover;
      }
    }
  }
}

.fos-btn-inner {
  padding: 6px 10px;
  font-weight: 600;
  display: flex;
}

.btn-filters {
  @media (max-width:991.998px) {
    border: 1px solid grey; 
    border-radius: 80px;
    padding: 0 6px;

    &:hover, &:focus-visible {
      background-color: #d3d4d5;
      border: 1px solid grey; 
      border-radius: 80px;
      padding: 0 6px;
    }
  }
}

.c-shadow {
  box-shadow: 0 0 24px 8px rgba(0, 0, 0, 0.15), 0 0 12px 4px rgba(0, 0, 0, 0.15);
}

.flyb-group {
  background-color: white;
  display: flex;
  justify-content: space-evenly;
  position: absolute;
  left: 0;
  width: 100%;
  padding: .5rem 0 .75rem 0;
  border-top: 1px solid #d3d4d5;
  @include transition;

  .text-end {
    padding-right: 3px;
  }
  .text-start {
    padding-left: 3px;
  }
  button, .btn, .xfs-btn {
    width: 96% !important;
  }
}

/* Custom Radio-Button-Design */
#radio-gcv1 .radio-group {
  $radio-size: 20px;
  $circle-size: 60%;

  display: flex;
  align-items: center;
  width: max-content;
  
  input[type="radio"] {
    position: absolute;
    left: -101dvh;
  }

  .content, .item {
    @include userSelect;
  }

  .item {
    display: inline-block;
    width: $radio-size;
    height: $radio-size;
    border: 1px solid $xfs-back-clr;
    box-shadow: 0 0 0 1px $xfs-back-clr;
    border-radius: 100%;
    margin: 0 1.25rem 0 4px;
    background-color: white;
    cursor: pointer;
    position: relative;

    /* Radio item */
    &::before {
      content: '';
      display: inline-block;
      border-radius: 100%;
      background-color: black;
      position: absolute;
      top: 50%;
      left: 50%;
      width: 0;
      height: 0;
      @include transition(.125s 0s ease-in);
      @include transfTrans;
    }

    /* Radio Hover effect Pulse */
    &::after {
      content: '';
      display: inline-block;
      background-color: transparent;
      border-radius: 100%;
      position: absolute;
      top: 50%;
      left: 50%;
      width: $radio-size;
      height: $radio-size;
      box-shadow: 0 0 1px 0 rgba($xfs-back-clr, 40%), 0 0 0 0 rgba($xfs-back-clr, 35%);
      @include transition(.125s .015s ease-out);
      @include transfTrans;
      z-index: -1;
    }

    /* Radio Hover effect Border */
    &:hover {
      box-shadow: 0 0 0 1px black;
      border-color: transparent;
    }
    /* Radio Hover effect Pulse */
    &:hover::after {
      box-shadow: 0 0 1px 3px rgba($xfs-back-clr, 40%), 0 0 0 10px rgba($xfs-back-clr, 35%);
    }
  }

  /* Radio Hover effect Border */
  &:hover .item, 
  &:focus-visible .item {
    box-shadow: 0 0 0 1px black;
    border-color: transparent;
  }
  /* Radio Hover effect Pulse */
  &:hover .item::after, 
  &:focus-visible .item::after {
    box-shadow: 0 0 1px 3px rgba($xfs-back-clr, 40%), 0 0 0 10px rgba($xfs-back-clr, 35%);
  }

  /* Active Radio-Button */
  input[type="radio"]:checked + .item {
    box-shadow: 0 0 0 1px black;
    &::before {
      width: calc($radio-size / 100% * $circle-size);
      height: calc($radio-size / 100% * $circle-size);
    }
  }
}



/* Switch in green */
#switch {

  $sw-height: 26px;
  $sw-width: 62px;
  $sw-color: $c-light-green;
  $sw-grey: $app-grey;
  // $sw-color: #52D66B;
  input[type="checkbox"] {
    position: absolute;
    left: -101dvh;
  }

  .switch-label {
    width: $sw-width + 12px;
    height: $sw-height + 8px;
    cursor: pointer;
    -webkit-tap-highlight-color: transparent;
    @include transformAll(translate(0));
    z-index: 9;
  
    &:before {
      // Background
      content: '';
      position: relative;
      top: 1px;
      left: 1px;
      width: $sw-width;
      height: $sw-height;
      display: block;
      background: $sw-grey;
      border-radius: 12px;
      border: 1px solid rgba(#9A9999, 25%);
      box-shadow: inset 1px 1px 2px 1px rgba(0, 0, 0, .25);
      @include transition(background .2s 0s ease);
    }
    span {
      // Button
      position: absolute;
      top: 0;
      left: 0;
      width: $sw-height + 2px;
      height: $sw-height + 2px;
      display: block;
      background: white;
      border-radius: 100%;
      box-shadow: 0 2px 6px rgba(#9A9999, .75);
      @include transition(.2s 0s ease);
      -webkit-tap-highlight-color: transparent;

      &::before {
        content: '';
        width: 100%;
        height: 100%;
        position: absolute;
        top: 50%;
        left: 50%;
        @include transfTrans;
        border-radius: 100%;
        box-shadow: 0 0 0 0 rgba($sw-color, 25%), 0 0 0 0 rgba($sw-color, 25%);
        z-index: -1;
        @include transition(0);
      }

      &::after {
        content: '';
        width: 2px;
        height: 9px;
        position: absolute;
        top: 47%;
        left: 50%;
        @include transfTrans;
        border-radius: 2px;
        box-shadow: 0 0 0 0 rgba($sw-color, 50%), 0 0 0 0 rgba(transparent, 15%);
        @include transition(0);
      }
  
      svg {
        margin: 8px 8px 9px 9px; // Position Animation
        fill: none;
  
        path {
          stroke: #C8CCD4;
          stroke-width: 2;
          stroke-linecap: round;
          stroke-linejoin: round;
          stroke-dasharray: 24;
          stroke-dashoffset: 0;
          @include transition(.5s);
        }
      }
    }
  }
  
  input[type="checkbox"]:checked + .switch-label {
    &:before {
      background: $sw-color;
    }
    span {
      @include transformAll(translateX($sw-width - $sw-height));

      &::before {
        top: 0;
        left: 0;
        @include transfTrans(0);
        @include transition(.2s .35s ease-in);
        box-shadow: 0 0 22px 4px rgba($sw-color, 25%), 0 0 12px 2px rgba($sw-color, 25%);
      }

      &::after {
        box-shadow: 0 0 6px 2px rgba($sw-color, 50%), 0 0 0 1px rgba(black, 15%);
        @include transition(.2s .35s ease-in);
      }
    }
      path {
        stroke: $sw-color;
        stroke-dasharray: 25;
        stroke-dashoffset: 25;
      }
  }
}

#range-slider {
  .slider-container {
    $rs-highlight: $c-light-green;
    $rs-grey:  rgba($app-grey, 65%);
    $rs-text-clr: rgb(120, 120, 120);

    position: relative;
    width: 100%;
    max-width: 340px;
    
    .input-box {
      display: flex;
      justify-content: center;
      align-items: center;
      margin-bottom: 2rem;

      .range-input {
        width: 100%;
        height: max-content;
        padding: .65rem 1rem;
        background-color: $rs-grey;
        border-radius: 4px;
        color: black;
        font-weight: 600;
        letter-spacing: .5pt;
        // override browser
        outline: none;
        border: 1px solid $rs-grey;
        box-shadow: inset 1px 1px 1px 0 $rs-grey;

        &:focus-visible {
          box-shadow: 0 0 0 2px rgba(0, 63, 236, 0.75); /* override Focus-Shadow */
        }
      }
      .range-input::placeholder {
        color: $rs-text-clr;
        @include opacity(1);
      }
      .range-input.guard {
        -webkit-caret-color: transparent;
        caret-color: transparent;
      }
    }

    .slider-box {
      $stick-height: 6px;
      padding: 0 .75rem;

      .stick {
        height: $stick-height;
        width: 100%;
        background-color: $rs-grey;
        position: relative;

        .range-stick {
          position: absolute;
          top: 0;
          height: 100%;
          background-color: $rs-highlight;
        }

        .range-btn {
          $rangeBtn: 40px; // Dependency on this class in js!

          position: absolute;
          top: 50%;
          @include transformAll(translateY(-50%));
          width: $rangeBtn;
          height: $rangeBtn;
          cursor: pointer;

          &::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            @include transfTrans;
            width: 28px;
            height: 28px;
            background-color: rgba(255, 0, 0, 0.377);
            box-shadow: 0 2px 6px rgba(#9A9999, .75);
            border: 1px solid rgba(#9A9999, .25);
            border-radius: 100%;
            z-index: -1;
          }
        }
      }
    }
  }
}

